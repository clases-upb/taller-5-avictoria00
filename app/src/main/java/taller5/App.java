/*
 * This source file was generated by the Gradle 'init' task
 */
package taller5;

public class App {
    
    public static void main(String[] args) {
        
        try {
            
        } 
        
        catch (Exception e) {
            // TODO: handle exception
        }
    }


    /*
    
        1.	Desarrolle un algoritmo e impleméntelo en Java que: le pida al usuario un número entero positivo 
        entre 1000 y 9999. En un ciclo genere números de manera aleatoria y cuente los intentos que hizo antes 
        de hallar el número exactamente.
        
    
    */ 
  public static int Encontrar_aleatorio (int numero){

        try {

            final int fin = 9999, ini = 1000, rango = 1; 
            int alea = 0, cont = 0;

            System.out.println("ingrese un número del 1000 al 9999");
            Scanner teclado = new Scanner(System.in);
            numero = teclado.nextInt();

            if (numero >= ini && numero <= fin){
                while(alea != numero){
                    alea = (int)(Math.random()*(fin - ini) + ini + rango);
                    if (alea == numero)
                        System.out.println("la cantidad de números hasta llegar al solicitado: ");
                    else
                        cont ++;
                }
                return cont;
            }
            else{
                System.out.println("el número debe estar entre 1000 y 9999");
                return -1;
            }
        } 
        catch(Exception e) {
            return -1;
        }
  }
    
    /* 
     
        2.	Se requiere una función en java que simule las ventas de tres años para un almacén. Para cada año, deberá generar 
        un aleatorio para cada mes hasta completar los 12 meses. La función se llamará Simular_ventas, y debe retornar un String 
        al final que muestre las ventas de cada año, así:
        
            Año 1
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 1:  $##.###.###
            
            Año 2
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 2: $##.###.###
            
            Año 3
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###

            Total ventas Año 3: $##.###.###
            
            Investigue sobre la clase DecimalFormat para mostrar bien la salida. 
            import java.text.DecimalFormat;
            DecimalFormat form_pesos = new DecimalFormat("$#,###.00");

        
      
    */

    public static String Ventas(){

        try {
            final long minimo_ventas = 30000000, maximo_ventas= 100000000;
            final int simulables = 3, meses = 12;
            long ventas_x_mes = 0, total_ventas = 0, fin_simul = 0;
            String  mensaje_mes = "", mensaje_total_ventas = "", mensaje_fin = "";

            DecimalFormat formato = new DecimalFormat("$##,###.00");

            for(int inicio = 1; inicio <= simulables; inicio ++){

                System.out.println("Año" + inicio + ":");

                for(int mes_inicio = 1; mes_inicio <= meses; mes_inicio ++){
                    ventas_x_mes = (int)(Math.random() * (maximo_ventas - minimo_ventas) + minimo_ventas);
                    total_ventas = total_ventas + ventas_x_mes;
                    mensaje_mes = formato.format(ventas_x_mes);
                    System.out.println("la ventas del mes " + mes_inicio + " es igual a: " + mensaje_mes);
                }

                mensaje_total_ventas = formato.format(total_ventas);
                fin_simul = fin_simul + total_ventas;
                System.out.println("el total de ventas del año " + inicio + " es: " + mensaje_total_ventas + "\n");

            }

            mensaje_fin = formato.format(fin_simul);

            System.out.println("el total de ventas de los últimos 3 años: ");

            return mensaje_fin;

        } 

        catch (Exception e) {
            
            String error = "Ha ocurrido un error inesperado " + e;
            return error;
        }
    }


    /*  
     
        3.	En una fábrica se tiene el siguiente patrón de empaque: En una estiba(o pallet) caben 16  cajas y en cada caja, 
        caben 30 bombillas. Desarrolle una función que se llame: Calcular_empaque que: reciba como argumento la cantidad de 
        bombillas que se deben empacar y a partir de allí: calcule cuántas cajas necesita, cuántas estibas o pallets necesita. 
        Luego escriba lo siguiente: 

        Para ### bombillas, se necesitan ## cajas y ## pallets. Se quedan ### bombillas sin empacar. Se empacará así:

        Pallet 1 --> Caja1, Caja2……,Caja16
        Pallet2 -->  Caja17, Caja18…..Caja 32
        .
        Pallet n -- > Caja m, caja m+1…..
        
        La función retornará un texto, con la información anterior. Pruebe la función llamándola desde el programa principal: solicite al usuario el número de bombillas e invoque la función para imprimir en el main, los resultados.



    */

public static String Calcular_empaque(int bombillas){
        try {
           int cajas = 30, paq_galletas = 16, ciclo=16, nro_cajas = (bombillas / cajas ),
            residuo_bombillos = (bombillas % cajas), paquetes = (int)Math.ceil((double) nro_cajas / paq_galletas); 

            
            String txt_retornar = " en el caso de " + bombillas + " bombillas, se necesitarán " + nro_cajas + " cajas y un total de" + paq_galletas + 
            " pallets. Por lo cual, " + residuo_bombillos + " bombillos no tendrán empaque. el modo de empacar será: \n";

            for(int i=1;i<=paq_galletas;i++){
                txt_retornar = txt_retornar + "pallet "+ i+" --> ";
                while(ciclo>0){
                    if(nro_cajas<=0){
                        txt_retornar = txt_retornar + "";
                    }else{
                    txt_retornar = txt_retornar+ "caja "+ nro_cajas +", ";
                    }
                    nro_cajas--;
                    ciclo--;
                }
                txt_retornar+="\n";
                ciclo = paquetes;
                if(nro_cajas ==0){
                    return txt_retornar;
                }
                
            }
            
            return txt_retornar;
        }
        catch (Exception e) {
            return "error en Calcular_empaque";
        }
    }

    /* 
    

        4.	En un juego, cada jugador tiene 3 intentos para sacar cartas de una baraja. Las cartas van numeradas entre 1 y 10. 
        Una función Jugar_21, deberá simular el juego para una cantidad de usuarios que enviará el usuario desde el main entre 1 y 6.

        Para cada uno de los jugadores, el programa le calculará 3 cartas al azar y al final imprimirá el juego para cada jugador basado en las siguientes reglas: 
        
        Si saca 21 exactos: juego perfecto
        Si saca más de 21: se pasó
        Si saca menos de 21: faltaron puntos

        La función deberá imprimir los puntos de cada jugador junto con la regla anterior, como muestra el ejemplo:

        Jugador X, puntos 21 -- > juego perfecto
        Jugador Y, puntos 26 -- > se pasó
        .
        .


    */
 
     public static String Jugar_21(byte jugadores){
        try {
            String total= "";
            byte alea_1=0, alea_2=0, alea_3=0, suma=0;
            final byte  nro_max = 6, veinte_uno=21;
            
            total = total +  " Si saca 21 exactos: juego perfecto \n Si saca más de 21: se pasó \n Si saca menos de 21: faltaron puntos \n";

            if(jugadores < 1 && jugadores > nro_max)
                return "no cumple el ralgo de jugadores";
            else{
                for(byte jug_=1; jug_<= jugadores; jug_++){
                    
                        alea_1=(byte)(Math.random()*(10)+1);
                        alea_2=(byte)(Math.random()*(10)+1);
                        alea_3=(byte)(Math.random()*(10)+1);
                        suma=(byte)(alea_1+alea_2+alea_3);
                        total= total +  "jugador "+ jug_ + ", " + " puntos " + suma;

                    if (suma ==veinte_uno)
                        total = total + " -- > juego perfecto \n";
                    else if (suma > veinte_uno)
                        total = total + " -- > se pasó \n";
                    else 
                        total = total + " -- > faltaron puntos \n";
                }
            }

            return total;

        } catch (Exception e) {
            return "error ";
        }
    }


}
